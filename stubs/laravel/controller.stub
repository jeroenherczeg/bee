<?php

namespace {{namespace}}\Http\Controllers;

use {{namespace}}\Http\Requests\{{class}}Request;
use {{namespace}}\Models\Eloquent\{{class}};
use {{namespace}}\Models\Transformers\{{class}}Transformer;

/**
 * Class {{class}}Controller
 * @package {{namespace}}\Http\Controllers
 */
class {{class}}Controller extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        ${{models}} = {{class}}::all();

        return $this->respondWithCollection(${{models}}, new {{class}}Transformer());
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param {{class}}Request $request
     * @return \Illuminate\Http\Response
     */
    public function store({{class}}Request $request)
    {
        ${{model}} = {{class}}::create($request->all());
        ${{model}}->fresh();

        return $this->respondWithCreatedItem(${{model}}, new {{class}}Transformer());
    }

    /**
     * Display the specified resource.
     *
     * @param  int $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        ${{model}} = {{class}}::whereId($id)->first();

        if (!${{model}}) {
            return $this->respondWithErrorNotFound();
        }

        return $this->respondWithItem(${{model}}, new {{class}}Transformer());
    }

    /**
     * Update the specified resource in storage.
     *
     * @param {{class}}Request $request
     * @param  int $id
     * @return \Illuminate\Http\Response
     */
    public function update({{class}}Request $request, $id)
    {
        ${{model}} = {{class}}::whereId($id)->first();

        if (!${{model}}) {
            return $this->respondWithErrorNotFound();
        }

        ${{model}}->update($request->all());
        ${{model}}->fresh();

        return $this->respondWithItem(${{model}}, new {{class}}Transformer());
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int $id
     * @return \Illuminate\Http\JsonResponse
     */
    public function destroy($id)
    {
        ${{model}} = {{class}}::whereId($id)->first();

        if (!${{model}}) {
            return $this->respondWithErrorNotFound();
        }

        ${{model}}->delete();

        return $this->respondOk();
    }
}
